memberSearchIndex = [{"p":"colorgen","c":"ColorGen","l":"analogousColorRGB(int, float)","url":"analogousColorRGB(int,float)"},{"p":"colorgen","c":"ColorGen","l":"analogousColorRGB(int, float, float, float, float, float, float)","url":"analogousColorRGB(int,float,float,float,float,float,float)"},{"p":"colorgen","c":"ColorGen","l":"colorDistance(int[], int[])","url":"colorDistance(int[],int[])"},{"p":"colorgen","c":"ColorGen","l":"ColorGen()","url":"%3Cinit%3E()"},{"p":"colorgen","c":"ColorGen","l":"complementaryColorRGB(int, float, float)","url":"complementaryColorRGB(int,float,float)"},{"p":"colorgen","c":"ColorGen","l":"complementaryColorRGB(int, float, float, float, float, float, float)","url":"complementaryColorRGB(int,float,float,float,float,float,float)"},{"p":"colorgen","c":"ColorGen","l":"gradientRGB(int, float, float, String)","url":"gradientRGB(int,float,float,java.lang.String)"},{"p":"colorgen","c":"ColorGen","l":"gradientRGB(int, float, float, String, float, float)","url":"gradientRGB(int,float,float,java.lang.String,float,float)"},{"p":"colorgen","c":"ColorGen","l":"HSBtoRGB(float, float, float)","url":"HSBtoRGB(float,float,float)"},{"p":"colorgen","c":"ColorGen","l":"parseColor(int)"},{"p":"colorgen","c":"ColorGen","l":"randomOffsetRGB(int[], float)","url":"randomOffsetRGB(int[],float)"},{"p":"colorgen","c":"ColorGen","l":"randomRGB()"},{"p":"colorgen","c":"ColorGen","l":"RGBtoHSB(int, int, int)","url":"RGBtoHSB(int,int,int)"},{"p":"colorgen","c":"ColorGen","l":"splitcomplementaryColorRGB(int, float, float, float, float)","url":"splitcomplementaryColorRGB(int,float,float,float,float)"},{"p":"colorgen","c":"ColorGen","l":"splitcomplementaryColorRGB(int, float, float, float, float, float, float, float)","url":"splitcomplementaryColorRGB(int,float,float,float,float,float,float,float)"},{"p":"colorgen","c":"ColorGen","l":"standerHarmonyColorRGB(int, float, float, float)","url":"standerHarmonyColorRGB(int,float,float,float)"},{"p":"colorgen","c":"ColorGen","l":"standerHarmonyColorRGB(int, float, float, float, float, float, float, float, float)","url":"standerHarmonyColorRGB(int,float,float,float,float,float,float,float,float)"},{"p":"colorgen","c":"ColorGen","l":"to24BitRGB(int[])"},{"p":"colorgen","c":"ColorGen","l":"to32BitARGB(int[])"},{"p":"colorgen","c":"ColorGen","l":"to32BitARGB(int[], int)","url":"to32BitARGB(int[],int)"},{"p":"colorgen","c":"ColorGen","l":"triadColorRGB(int, float, float, float)","url":"triadColorRGB(int,float,float,float)"},{"p":"colorgen","c":"ColorGen","l":"triadColorRGB(int, float, float, float, float, float, float)","url":"triadColorRGB(int,float,float,float,float,float,float)"},{"p":"colorgen","c":"ColorGen","l":"triadMixingRGB(int[], int[], int[], float)","url":"triadMixingRGB(int[],int[],int[],float)"},{"p":"colorgen","c":"ColorGen","l":"yiq(int[])"}]